@model IEnumerable<StudentManagementSystem.Models.Subject>
@{
    ViewData["Title"] = "Qu·∫£n l√Ω m√¥n h·ªçc";
}

@section Styles {
    <link href="~/css/admin-ui.css" rel="stylesheet" />
    <link href="https://cdnjs.cloudflare.com/ajax/libs/animate.css/4.1.1/animate.min.css" rel="stylesheet" />
    <style>
        /* Beautiful close button - Override Bootstrap */
        .btn-close,
        .btn-close-white,
        .modal-header .btn-close {
            z-index: 1052 !important;
            position: relative !important;
            background: linear-gradient(135deg, #ff6b6b, #ee5a52) !important;
            border: 2px solid white !important;
            border-radius: 50% !important;
            width: 40px !important;
            height: 40px !important;
            opacity: 1 !important;
            box-shadow: 0 4px 15px rgba(255, 107, 107, 0.3) !important;
            transition: all 0.3s cubic-bezier(0.4, 0, 0.2, 1) !important;
            display: flex !important;
            align-items: center !important;
            justify-content: center !important;
            background-image: none !important;
        }

        .btn-close::before,
        .btn-close-white::before,
        .modal-header .btn-close::before {
            content: "‚úï" !important;
            color: white !important;
            font-size: 16px !important;
            font-weight: bold !important;
            line-height: 1 !important;
        }

        /* Hover effect for close button */
        .btn-close:hover,
        .btn-close-white:hover,
        .modal-header .btn-close:hover {
            background: linear-gradient(135deg, #ff5252, #d32f2f) !important;
            transform: scale(1.1) rotate(90deg) !important;
            box-shadow: 0 6px 20px rgba(255, 82, 82, 0.4) !important;
        }

        /* Active effect */
        .btn-close:active,
        .btn-close-white:active,
        .modal-header .btn-close:active {
            transform: scale(0.95) !important;
        }

        /* Beautiful modal header */
        .modal-header {
            background: linear-gradient(135deg, #a8e6cf, #7fcdcd) !important;
            border-bottom: none !important;
            padding: 20px 25px !important;
            border-radius: 15px 15px 0 0 !important;
            position: relative !important;
        }

        .modal-title {
            color: #2d5a27 !important;
            font-weight: 600 !important;
            font-size: 1.25rem !important;
        }

        /* Modal content styling */
        .modal-content {
            border: none !important;
            border-radius: 15px !important;
            box-shadow: 0 20px 60px rgba(0, 0, 0, 0.15) !important;
            overflow: hidden !important;
        }
    </style>
}

<div class="admin-page-container">
    <!-- Welcome Header -->
    <div class="welcome-header mb-4">
        <div class="d-flex justify-content-between align-items-center">
            <div class="position-relative z-index-2">
                <h2 class="mb-2 animate__animated animate__fadeInLeft fw-bold">
                    <i class="fas fa-book me-2"></i>
                    Qu·∫£n l√Ω m√¥n h·ªçc üìö
                </h2>
                <p class="mb-0 opacity-75">Qu·∫£n l√Ω th√¥ng tin m√¥n h·ªçc v√† ph√¢n c√¥ng gi·∫£ng vi√™n</p>
            </div>
            <div class="text-end position-relative z-index-2">
                <a href="@Url.Action("CreateSubject")" class="btn btn-light btn-lg px-4 py-2 rounded-pill shadow-sm">
                    <i class="fas fa-plus me-2"></i> Th√™m m√¥n h·ªçc m·ªõi
                </a>
            </div>
        </div>
    </div>

@if (TempData["Success"] != null)
{
    <div class="alert alert-success alert-dismissible fade show" role="alert">
        @TempData["Success"]
        <button type="button" class="btn-close" data-bs-dismiss="alert"></button>
    </div>
}

@if (TempData["Error"] != null)
{
    <div class="alert alert-danger alert-dismissible fade show" role="alert">
        @TempData["Error"]
        <button type="button" class="btn-close" data-bs-dismiss="alert"></button>
    </div>
}

<div class="admin-action-card animate__animated animate__fadeInUp">
    <div class="card-header">
        <h5 class="mb-0 fw-bold">
            <i class="fas fa-list me-2"></i> Danh s√°ch m√¥n h·ªçc
        </h5>
    </div>
    <div class="card-body">
        @if (Model.Any())
        {
            <div class="table-responsive">
                <table class="table table-modern">
                    <thead>
                        <tr>
                            <th>M√£ m√¥n h·ªçc</th>
                            <th>T√™n m√¥n h·ªçc</th>
                            <th>S·ªë t√≠n ch·ªâ</th>
                            <th>Gi·∫£ng vi√™n ph·ª• tr√°ch</th>
                            <th>Tr·∫°ng th√°i</th>
                            <th class="text-center">Thao t√°c</th>
                        </tr>
                    </thead>
                    <tbody>
                        @foreach (var subject in Model)
                        {
                            <tr>
                                <td><strong>@subject.SubjectCode</strong></td>
                                <td>@subject.SubjectName</td>
                                <td>@subject.Credits</td>
                                <td>@subject.Teacher.FullName</td>
                                <td>
                                    @if (subject.IsActive)
                                    {
                                        <span class="badge bg-success">Ho·∫°t ƒë·ªông</span>
                                    }
                                    else
                                    {
                                        <span class="badge bg-secondary">Ng·ª´ng ho·∫°t ƒë·ªông</span>
                                    }
                                </td>
                                <td>
                                    <div class="btn-group" role="group">
                                        <a href="@Url.Action("EditSubject", new { id = subject.Id })" class="btn btn-sm btn-outline-primary">
                                            <i class="fas fa-edit"></i> S·ª≠a
                                        </a>
                                        <button type="button" class="btn btn-sm btn-outline-info" data-bs-toggle="modal" data-bs-target="#detailModal-@subject.Id">
                                            <i class="fas fa-eye"></i> Xem
                                        </button>
                                        <button type="button" class="btn btn-sm btn-outline-danger" data-bs-toggle="modal" data-bs-target="#deleteModal-@subject.Id">
                                            <i class="fas fa-trash"></i> X√≥a
                                        </button>
                                    </div>
                                </td>
                            </tr>
                        }
                    </tbody>
                </table>
            </div>
        }
        else
        {
            <div class="text-center py-5">
                <i class="fas fa-book fa-3x text-muted mb-3"></i>
                <h5 class="text-muted">Ch∆∞a c√≥ m√¥n h·ªçc n√†o</h5>
                <p class="text-muted">H√£y th√™m m√¥n h·ªçc ƒë·∫ßu ti√™n cho h·ªá th·ªëng</p>
                <a href="@Url.Action("CreateSubject")" class="btn btn-success">
                    <i class="fas fa-plus"></i> Th√™m m√¥n h·ªçc m·ªõi
                </a>
            </div>
        }
    </div>
</div>

<!-- Detail Modals -->
@foreach (var subject in Model)
{
    <div class="modal fade" id="detailModal-@subject.Id" tabindex="-1">
        <div class="modal-dialog">
            <div class="modal-content">
                <div class="modal-header">
                    <h5 class="modal-title">Chi ti·∫øt m√¥n h·ªçc</h5>
                    <button type="button" class="btn-close" data-bs-dismiss="modal"></button>
                </div>
                <div class="modal-body">
                    <dl class="row">
                        <dt class="col-sm-4">M√£ m√¥n h·ªçc:</dt>
                        <dd class="col-sm-8"><strong>@subject.SubjectCode</strong></dd>
                        
                        <dt class="col-sm-4">T√™n m√¥n h·ªçc:</dt>
                        <dd class="col-sm-8">@subject.SubjectName</dd>
                        
                        <dt class="col-sm-4">M√¥ t·∫£:</dt>
                        <dd class="col-sm-8">@(string.IsNullOrEmpty(subject.Description) ? "Ch∆∞a c√≥ m√¥ t·∫£" : subject.Description)</dd>
                        
                        <dt class="col-sm-4">S·ªë t√≠n ch·ªâ:</dt>
                        <dd class="col-sm-8">@subject.Credits</dd>
                        
                        <dt class="col-sm-4">Gi·∫£ng vi√™n:</dt>
                        <dd class="col-sm-8">@subject.Teacher.FullName</dd>
                        
                        <dt class="col-sm-4">Tr·∫°ng th√°i:</dt>
                        <dd class="col-sm-8">
                            @if (subject.IsActive)
                            {
                                <span class="badge bg-success">Ho·∫°t ƒë·ªông</span>
                            }
                            else
                            {
                                <span class="badge bg-secondary">Ng·ª´ng ho·∫°t ƒë·ªông</span>
                            }
                        </dd>
                        
                        <dt class="col-sm-4">Ng√†y t·∫°o:</dt>
                        <dd class="col-sm-8">@subject.CreatedAt.ToString("dd/MM/yyyy HH:mm")</dd>
                    </dl>
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">ƒê√≥ng</button>
                    <a href="@Url.Action("EditSubject", new { id = subject.Id })" class="btn btn-primary">
                        <i class="fas fa-edit"></i> Ch·ªânh s·ª≠a
                    </a>
                </div>
            </div>
        </div>
    </div>
}

<!-- Delete Modals -->
@foreach (var subject in Model)
{
    <div class="modal fade" id="deleteModal-@subject.Id" tabindex="-1">
        <div class="modal-dialog">
            <div class="modal-content">
                <div class="modal-header bg-danger text-white">
                    <h5 class="modal-title">X√°c nh·∫≠n x√≥a</h5>
                    <button type="button" class="btn-close" data-bs-dismiss="modal"></button>
                </div>
                <div class="modal-body">
                    <p>B·∫°n c√≥ ch·∫Øc ch·∫Øn mu·ªën x√≥a m√¥n h·ªçc <strong>@subject.SubjectCode - @subject.SubjectName</strong>?</p>
                    <p class="text-danger"><small><i class="fas fa-exclamation-triangle"></i> H√†nh ƒë·ªông n√†y kh√¥ng th·ªÉ ho√†n t√°c!</small></p>
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">H·ªßy</button>
                    <form asp-action="DeleteSubject" method="post" class="d-inline">
                        <input type="hidden" name="id" value="@subject.Id" />
                        <button type="submit" class="btn btn-danger">
                            <i class="fas fa-trash"></i> X√≥a
                        </button>
                    </form>
                </div>
            </div>
        </div>
    </div>
}
</div> <!-- End admin-page-container -->

@section Scripts {
    <script>
        // Add force close modal function
        window.forceCloseModal = function() {
            console.log('Force closing all modals...');

            // Method 1: Bootstrap way
            const openModals = document.querySelectorAll('.modal.show');
            openModals.forEach(modal => {
                const modalInstance = bootstrap.Modal.getInstance(modal);
                if (modalInstance) {
                    modalInstance.hide();
                }
                modal.classList.remove('show');
                modal.style.display = 'none';
            });

            // Method 2: Remove all backdrops
            const backdrops = document.querySelectorAll('.modal-backdrop');
            backdrops.forEach(backdrop => backdrop.remove());

            // Method 3: Force restore body
            document.body.classList.remove('modal-open');
            document.body.style.overflow = '';
            document.body.style.paddingRight = '';

            console.log('All modals force closed');
        };

        // Add click outside and double-click handlers
        document.addEventListener('click', function(e) {
            if (e.target.classList.contains('modal') || e.target.classList.contains('modal-backdrop')) {
                console.log('Clicked outside modal, closing...');
                const modalInstance = bootstrap.Modal.getInstance(e.target);
                if (modalInstance) {
                    modalInstance.hide();
                } else {
                    forceCloseModal();
                }
            }
        });

        document.addEventListener('dblclick', function(e) {
            const openModals = document.querySelectorAll('.modal.show');
            if (openModals.length > 0) {
                console.log('Double-click detected, force closing modals...');
                forceCloseModal();
            }
        });

        // Add smooth animations
        document.addEventListener('DOMContentLoaded', function() {
            // Add hover effects to action buttons
            const actionButtons = document.querySelectorAll('.btn');
            actionButtons.forEach(btn => {
                btn.addEventListener('mouseenter', function() {
                    this.style.transform = 'translateY(-2px) scale(1.05)';
                });
                btn.addEventListener('mouseleave', function() {
                    this.style.transform = 'translateY(0) scale(1)';
                });
            });
        });
    </script>
}
